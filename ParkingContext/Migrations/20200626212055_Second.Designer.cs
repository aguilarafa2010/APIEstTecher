// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingContext;

namespace ParkingContext.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200626212055_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingModel.Carro", b =>
                {
                    b.Property<Guid>("CaroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CaroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("ParkingModel.Conferencia", b =>
                {
                    b.Property<Guid>("Inf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Informacoes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Inf");

                    b.HasIndex("CaroId")
                        .IsUnique();

                    b.ToTable("Conferencias");
                });

            modelBuilder.Entity("ParkingModel.PatioEstacionamento", b =>
                {
                    b.Property<Guid>("Entrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EntradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Duracao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaga")
                        .HasColumnType("int");

                    b.Property<double>("ValorFinal")
                        .HasColumnType("float");

                    b.HasKey("Entrada");

                    b.ToTable("PastioEstacionamento");
                });

            modelBuilder.Entity("ParkingModel.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ParkingModel.Carro", b =>
                {
                    b.HasOne("ParkingModel.Usuario", "Usuario")
                        .WithMany("Carros")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ParkingModel.Conferencia", b =>
                {
                    b.HasOne("ParkingModel.Carro", "Carro")
                        .WithOne("Conferencia")
                        .HasForeignKey("ParkingModel.Conferencia", "CaroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
